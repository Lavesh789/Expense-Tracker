<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Systems</name>
    </assembly>
    <members>
        <member name="T:System.MSSQLServer.MSSql">
            <summary>
             This class use to connect with SQL Server Database.This class cannot be inherited.
            </summary>
        </member>
        <member name="M:System.MSSQLServer.MSSql.#ctor(System.String,System.String)">
            <summary>
            create instance of SqlDatabase class
            </summary>
            <param name="Query">Sql Query</param>
            <param name="TName">Table Name</param>
            <param name="ConString">Connection String information</param>
        </member>
        <member name="M:System.MSSQLServer.MSSql.#ctor(System.String)">
            <summary>
            create new database connection
            </summary>
        </member>
        <member name="M:System.MSSQLServer.MSSql.Connection">
            <summary>
            return current connection information
            </summary>
        </member>
        <member name="P:System.MSSQLServer.MSSql.connection">
            <summary>
            return current connection information
            </summary>
        </member>
        <member name="M:System.MSSQLServer.MSSql.Contains(System.String)">
            <summary>
            Determines whether an element is in the Database.
            </summary>
        </member>
        <member name="M:System.MSSQLServer.MSSql.ExecuteQuery(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
        </member>
        <member name="M:System.MSSQLServer.MSSql.SearchRow(System.String,System.Int32)">
            <summary>
            Sends the commandtext to the database connection and return row.
            </summary>
        </member>
        <member name="M:System.MSSQLServer.MSSql.LoadDataTable(System.String)">
            <summary>
            fill and return datatable.
            </summary>
        </member>
        <member name="M:System.MSSQLServer.MSSql.GetSingleValue(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns single value.
            </summary>
        </member>
        <member name="M:System.MSSQLServer.MSSql.sqlConnection">
            <summary>
            return current connection
            </summary>
            <returns>SqlConnection</returns>
        </member>
        <member name="M:System.MSSQLServer.MSSql.Contain(System.String)">
            <summary>
            check data in table
            </summary>
            <param name="Query">String</param>
            <returns>bool</returns>
        </member>
        <member name="M:System.MSSQLServer.MSSql.sqlExecuteQuery(System.String)">
            <summary>
             Executes a Transact-SQL statement against the connection and returns no. of row affected
            </summary>
            <param name="Query"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.MSSql.sqlSearchRow(System.String,System.Int32)">
            <summary>
            Search data in table
            </summary>
            <param name="Query">sql query</param>
            <param name="SearchCount">no. of coloumns</param>
            <returns>String</returns>
        </member>
        <member name="M:System.MSSQLServer.MSSql.sqlLoadDataTable(System.String)">
            <summary>
            return datatable
            </summary>
            <param name="Query">sql query</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:System.MSSQLServer.MSSql.sqlGetSingleValue(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns single value.
            </summary>
        </member>
        <member name="M:System.MSSQLServer.MSSql.ExcuteProcedure(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes a Procedure statement against the connection and returns no. of row affected.
            </summary>
            <param name="ProcedureName"></param>
            <param name="Parameres"></param>
            <returns></returns>
        </member>
        <member name="T:System.MSSQLServer.SQLDBTable">
            <summary>
            Summary description for SQLDBTable
            </summary>
        </member>
        <member name="F:System.MSSQLServer.SQLDBTable.ms">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="TableName"></param>
            <param name="DBConnection"></param>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.Insert(System.String[])">
            <summary>
            
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.updatetext(System.String,System.String,System.String,System.String)">
            <summary>
            Update Text Value
            </summary>
            <param name="IdName"></param>
            <param name="IdValue"></param>
            <param name="cname"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.updateInt(System.String,System.String,System.String,System.Int32)">
            <summary>
            Update Int Value
            </summary>
            <param name="IdName"></param>
            <param name="IdValue"></param>
            <param name="cname"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.updateDouble(System.String,System.String,System.String,System.Double)">
            <summary>
            Update Double Value
            </summary>
            <param name="IdName"></param>
            <param name="IdValue"></param>
            <param name="cname"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.checkValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.checkTwoValue(System.String,System.String,System.String,System.String)">
            <summary>
            Use to check contain two column values in table
            </summary>
            <param name="CName1"></param>
            <param name="Value1"></param>
            <param name="CName2"></param>
            <param name="Value2"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.GetValues(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.GetLastRow(System.String,System.Int32)">
            <summary>
            Get Last Row of Table using coloum name
            </summary>
            <param name="CName"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.GetTwoColumnText(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get Two Columns Value for text data
            </summary>
            <param name="CName1"></param>
            <param name="Value1"></param>
            <param name="CName2"></param>
            <param name="Value2"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.GetTable(System.String)">
            <summary>
            Get Full Table Data
            </summary>
            <param name="tname"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.GetTableNum(System.String,System.String)">
            <summary>
            Get One Column Value Data Rows with number
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.GetTableText(System.String,System.String)">
            <summary>
            Get One Column Value Data Rows with Text
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.GetTableTwoColumnText(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CName1"></param>
            <param name="Value1"></param>
            <param name="CName2"></param>
            <param name="Value2"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.GetTableTwoColumnNumText(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CName1"></param>
            <param name="Value1"></param>
            <param name="CName2"></param>
            <param name="Value2"></param>
            <returns></returns>
        </member>
        <member name="M:System.MSSQLServer.SQLDBTable.DeleteRow(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Systems.MySql.MySQLDB">
            <summary>
             This class use to connect with SQL Server Database.This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLDB.#ctor(System.String,System.String)">
            <summary>
            create instance of SqlDatabase class
            </summary>
            <param name="Query">Sql Query</param>
            <param name="TName">Table Name</param>
            <param name="ConString">Connection String information</param>
        </member>
        <member name="M:Systems.MySql.MySQLDB.#ctor(System.String)">
            <summary>
            create new database connection
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLDB.Connection">
            <summary>
            return current connection information
            </summary>
        </member>
        <member name="P:Systems.MySql.MySQLDB.connection">
            <summary>
            return current connection information
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLDB.Contains(System.String)">
            <summary>
            Determines whether an element is in the Database.
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLDB.ExecuteQuery(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLDB.SearchRow(System.String,System.Int32)">
            <summary>
            Sends the commandtext to the database connection and return row.
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLDB.LoadDataTable(System.String)">
            <summary>
            fill and return datatable.
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLDB.GetSingleValue(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns single value.
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLDB.sqlConnection">
            <summary>
            return current connection
            </summary>
            <returns>SqlConnection</returns>
        </member>
        <member name="M:Systems.MySql.MySQLDB.Contain(System.String)">
            <summary>
            check data in table
            </summary>
            <param name="Query">String</param>
            <returns>bool</returns>
        </member>
        <member name="M:Systems.MySql.MySQLDB.sqlExecuteQuery(System.String)">
            <summary>
             Executes a Transact-SQL statement against the connection and returns no. of row affected
            </summary>
            <param name="Query"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLDB.sqlSearchRow(System.String,System.Int32)">
            <summary>
            Search data in table
            </summary>
            <param name="Query">sql query</param>
            <param name="SearchCount">no. of coloumns</param>
            <returns>String</returns>
        </member>
        <member name="M:Systems.MySql.MySQLDB.sqlLoadDataTable(System.String)">
            <summary>
            return datatable
            </summary>
            <param name="Query">sql query</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Systems.MySql.MySQLDB.sqlGetSingleValue(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns single value.
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLDB.ExcuteProcedure(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Executes a Procedure statement against the connection and returns no. of row affected.
            </summary>
            <param name="ProcedureName"></param>
            <param name="Parameres"></param>
            <returns></returns>
        </member>
        <member name="T:Systems.MySql.MySQLTable">
            <summary>
            Summary description for SQLDBTable
            </summary>
        </member>
        <member name="F:Systems.MySql.MySQLTable.ms">
            <summary>
            
            </summary>
        </member>
        <member name="M:Systems.MySql.MySQLTable.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="TableName"></param>
            <param name="DBConnection"></param>
        </member>
        <member name="M:Systems.MySql.MySQLTable.Insert(System.String[])">
            <summary>
            
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.updatetext(System.String,System.String,System.String,System.String)">
            <summary>
            Update Text Value
            </summary>
            <param name="IdName"></param>
            <param name="IdValue"></param>
            <param name="cname"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.updateInt(System.String,System.String,System.String,System.Int32)">
            <summary>
            Update Int Value
            </summary>
            <param name="IdName"></param>
            <param name="IdValue"></param>
            <param name="cname"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.updateDouble(System.String,System.String,System.String,System.Double)">
            <summary>
            Update Double Value
            </summary>
            <param name="IdName"></param>
            <param name="IdValue"></param>
            <param name="cname"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.checkValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.checkTwoValue(System.String,System.String,System.String,System.String)">
            <summary>
            Use to check contain two column values in table
            </summary>
            <param name="CName1"></param>
            <param name="Value1"></param>
            <param name="CName2"></param>
            <param name="Value2"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.GetValues(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.GetLastRow(System.String,System.Int32)">
            <summary>
            Get Last Row of Table using coloum name
            </summary>
            <param name="CName"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.GetTwoColumnText(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get Two Columns Value for text data
            </summary>
            <param name="CName1"></param>
            <param name="Value1"></param>
            <param name="CName2"></param>
            <param name="Value2"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.GetTable(System.String)">
            <summary>
            Get Full Table Data
            </summary>
            <param name="tname"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.GetTableNum(System.String,System.String)">
            <summary>
            Get One Column Value Data Rows with number
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.GetTableText(System.String,System.String)">
            <summary>
            Get One Column Value Data Rows with Text
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.GetTableTwoColumnText(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CName1"></param>
            <param name="Value1"></param>
            <param name="CName2"></param>
            <param name="Value2"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.GetTableTwoColumnNumText(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CName1"></param>
            <param name="Value1"></param>
            <param name="CName2"></param>
            <param name="Value2"></param>
            <returns></returns>
        </member>
        <member name="M:Systems.MySql.MySQLTable.DeleteRow(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Systems.Utility.DataFile">
            <summary>
            Class is used to Write/Read for data file
            </summary>
        </member>
        <member name="M:Systems.Utility.DataFile.WriteToFile(System.String,System.String)">
            <summary>
            To Write a data file
            </summary>
            <param name="Path"></param>
            <param name="data"></param>
        </member>
        <member name="M:Systems.Utility.DataFile.ReadFile(System.String)">
            <summary>
            To Read a data file
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="T:Systems.Utility.EMail">
            <summary>
            Electronic mail, most commonly called email or e-mail since around 1993, 
            is a method of exchanging digital messages from an author to one or more recipients.
            </summary>
        </member>
        <member name="P:Systems.Utility.EMail.To">
            <summary>
            Reciever Email Id
            </summary>
        </member>
        <member name="P:Systems.Utility.EMail.Subject">
            <summary>
            Subject of email
            </summary>
        </member>
        <member name="P:Systems.Utility.EMail.Body">
            <summary>
            Detail of email message
            </summary>
        </member>
        <member name="M:Systems.Utility.EMail.Send">
            <summary>
            For send email
            </summary>
        </member>
        <member name="M:Systems.Utility.EMail.Send(System.String)">
            <summary>
            Send Email 
            </summary>
            <param name="File"></param>
        </member>
        <member name="T:Systems.Utility.EmailManagement">
            <summary>
            For SMTP Protocal
            </summary>
        </member>
        <member name="P:Systems.Utility.EmailManagement.EmailId">
            <summary>
            Email Id
            </summary>
        </member>
        <member name="P:Systems.Utility.EmailManagement.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="T:Systems.Utility.SecretKeys">
            <summary>
            auto key generation
            </summary>
        </member>
        <member name="M:Systems.Utility.SecretKeys.AutoKeyGeneration(System.Int32)">
            <summary>
            Auto gererate key of given size.
            </summary>
            <param name="Size">Length of password charactor</param>
            <returns></returns>
        </member>
        <member name="T:Systems.Utility.PasswordManagement">
            <summary>
            This class provide auto password creation service.
            </summary>
        </member>
        <member name="M:Systems.Utility.PasswordManagement.AutoPasswordGeneration">
            <summary>
            Auto gererate password of given size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Systems.Utility.PasswordManagement.AutoPasswordGeneration(System.Int32)">
            <summary>
            Auto gererate password of given size.
            </summary>
            <param name="Size">Length of password charactor</param>
            <returns></returns>
        </member>
        <member name="T:SystemUtility.Cryptography.PasswordGenerator">
            <summary>
            Auto password generator class
            </summary>
        </member>
        <member name="M:SystemUtility.Cryptography.PasswordGenerator.Generate">
            <summary>
            method to create your new password
            </summary>
            <returns>String Value</returns>
        </member>
        <member name="P:SystemUtility.Cryptography.PasswordGenerator.Exclusions">
            <summary>
            Specifies the set of characters to exclude in password generation.
            </summary>
        </member>
        <member name="P:SystemUtility.Cryptography.PasswordGenerator.Minimum">
            <summary>
            Specifies the minimum length of the generated password.
            </summary>
        </member>
        <member name="P:SystemUtility.Cryptography.PasswordGenerator.Maximum">
            <summary>
            Specifies the maximum length of the generated password.
            </summary>
        </member>
        <member name="P:SystemUtility.Cryptography.PasswordGenerator.ExcludeSymbols">
            <summary>
            Excludes symbols from the set of characters used to generate the password
            </summary>
        </member>
        <member name="P:SystemUtility.Cryptography.PasswordGenerator.RepeatCharacters">
            <summary>
            Controls generation of repeating characters in the generated password.
            </summary>
        </member>
        <member name="P:SystemUtility.Cryptography.PasswordGenerator.ConsecutiveCharacters">
            <summary>
            Controls generation of consecutive characters in the generated password.
            </summary>
        </member>
    </members>
</doc>
